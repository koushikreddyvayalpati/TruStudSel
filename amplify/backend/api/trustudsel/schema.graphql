# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

type Todo @model {
  id: ID!
  name: String!
  description: String
}

type Conversation @model 
@auth(rules: [
  { allow: owner, operations: [create, update, delete] },
  { allow: private, operations: [read] }
])
{
  id: ID!
  name: String
  participants: [String!]!
  messages: [Message] @hasMany(indexName: "byConversation", fields: ["id"])
  lastMessageContent: String
  lastMessageTime: AWSDateTime
  productId: String
  productName: String
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}

type Message @model 
@auth(rules: [
  { allow: owner, ownerField: "senderId", operations: [create, update, delete] },
  { allow: private, operations: [read] }
])
{
  id: ID!
  conversationId: ID! @index(name: "byConversation", sortKeyFields: ["createdAt"])
  senderId: String!
  senderName: String!
  content: String!
  status: MessageStatus
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime
}

enum MessageStatus {
  SENT
  DELIVERED
  READ
}

type Subscription {
  onCreateMessageByConversationId(conversationId: ID!): Message
    @aws_subscribe(mutations: ["createMessage"])
}
